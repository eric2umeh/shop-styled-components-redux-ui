{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/ui/CheckBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBox = props => {\n  _s();\n\n  const inputRef = React.useRef(null);\n\n  const onChange = () => {\n    if (props.onChange) {\n      props.onChange(inputRef.current);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"custom-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ref: inputRef,\n        onChange: onChange,\n        checked: props.checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"custom-checkbox__checkmark\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), props.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckBox, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = CheckBox;\nCheckBox.propTypes = {\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.bool\n};\nexport default CheckBox;\nconst Container = styled.div`\n    .custom-checkbox {\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n\n        cursor: pointer;\n\n        &:hover {\n            color: var(--main-color);\n        }\n\n        input {\n            position: absolute;\n            opacity: 0;\n            cursor: pointer;\n            height: 0;\n            width: 0;\n        }\n\n        .custom-checkbox__checkmark {\n            margin-right: 10px;\n            height: 15px;\n            width: 15px;\n            border: 1px solid ($txt-second-color);\n\n            i {\n                transform: scale(0);\n                transition: transform 0.3s ease;\n            }\n        }\n\n        input:checked ~ &__checkmark {\n            background-color: var(--main-color);\n            border: 1px solid var(--main-color);\n            color: $txt-white;\n        }\n\n        input:checked ~ &__checkmark > i {\n            transform: scale(1);\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckBox\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/ui/CheckBox.jsx"],"names":["React","PropTypes","styled","CheckBox","props","inputRef","useRef","onChange","current","checked","label","propTypes","string","isRequired","bool","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAEtB,QAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,IAAb,CAAjB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIH,KAAK,CAACG,QAAV,EAAoB;AAChBH,MAAAA,KAAK,CAACG,QAAN,CAAeF,QAAQ,CAACG,OAAxB;AACH;AACJ,GAJD;;AAMA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,GAAG,EAAEH,QAA5B;AAAsC,QAAA,QAAQ,EAAEE,QAAhD;AAA0D,QAAA,OAAO,EAAEH,KAAK,CAACK;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKKL,KAAK,CAACM,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMP,Q;;KAAAA,Q;AAuBNA,QAAQ,CAACQ,SAAT,GAAqB;AACjBD,EAAAA,KAAK,EAAET,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEjBJ,EAAAA,OAAO,EAAER,SAAS,CAACa;AAFF,CAArB;AAKA,eAAeX,QAAf;AAGA,MAAMY,SAAS,GAAGb,MAAM,CAACc,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1CA;MAAMD,S","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst CheckBox = props => {\n\n    const inputRef = React.useRef(null)\n\n    const onChange = () => {\n        if (props.onChange) {\n            props.onChange(inputRef.current)\n        }\n    }\n\n    return (\n        <Container>\n            <label className=\"custom-checkbox\">\n                <input type=\"checkbox\" ref={inputRef} onChange={onChange} checked={props.checked}/>\n                <span className=\"custom-checkbox__checkmark\">\n                    <i className=\"bx bx-check\"></i>\n                </span>\n                {props.label}\n            </label>\n        </Container>\n    )\n}\n\nCheckBox.propTypes = {\n    label: PropTypes.string.isRequired,\n    checked: PropTypes.bool\n}\n\nexport default CheckBox\n\n\nconst Container = styled.div`\n    .custom-checkbox {\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n\n        cursor: pointer;\n\n        &:hover {\n            color: var(--main-color);\n        }\n\n        input {\n            position: absolute;\n            opacity: 0;\n            cursor: pointer;\n            height: 0;\n            width: 0;\n        }\n\n        .custom-checkbox__checkmark {\n            margin-right: 10px;\n            height: 15px;\n            width: 15px;\n            border: 1px solid ($txt-second-color);\n\n            i {\n                transform: scale(0);\n                transition: transform 0.3s ease;\n            }\n        }\n\n        input:checked ~ &__checkmark {\n            background-color: var(--main-color);\n            border: 1px solid var(--main-color);\n            color: $txt-white;\n        }\n\n        input:checked ~ &__checkmark > i {\n            transform: scale(1);\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}