{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Helmet } from '../ui';\nimport { CheckBox } from '../ui';\nimport productData from '../assets/fake-data/products';\nimport category from '../assets/fake-data/category';\nimport colors from '../assets/fake-data/product-color';\nimport size from '../assets/fake-data/product-size';\nimport { Button } from '../ui';\nimport InfinityList from '../components/InfinityList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = () => {\n  _s();\n\n  const initFilter = {\n    category: [],\n    color: [],\n    size: []\n  };\n  const productList = productData.getAllProducts();\n  const [products, setProducts] = useState(productList);\n  const [filter, setFilter] = useState(initFilter);\n\n  const filterSelect = (type, checked, item) => {\n    if (checked) {\n      switch (type) {\n        case \"CATEGORY\":\n          setFilter({ ...filter,\n            category: [...filter.category, item.categorySlug]\n          });\n          break;\n\n        case \"COLOR\":\n          setFilter({ ...filter,\n            color: [...filter.color, item.color]\n          });\n          break;\n\n        case \"SIZE\":\n          setFilter({ ...filter,\n            size: [...filter.size, item.size]\n          });\n          break;\n\n        default:\n      }\n    } else {\n      switch (type) {\n        case \"CATEGORY\":\n          const newCategory = filter.category.filter(e => e !== item.categorySlug);\n          setFilter({ ...filter,\n            category: newCategory\n          });\n          break;\n\n        case \"COLOR\":\n          const newColor = filter.color.filter(e => e !== item.color);\n          setFilter({ ...filter,\n            color: newColor\n          });\n          break;\n\n        case \"SIZE\":\n          const newSize = filter.size.filter(e => e !== item.size);\n          setFilter({ ...filter,\n            size: newSize\n          });\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const clearFilter = () => setFilter(initFilter);\n\n  const updateProducts = useCallback(() => {\n    let temp = productList;\n\n    if (filter.category.length > 0) {\n      temp = temp.filter(e => filter.category.includes(e.categorySlug));\n    }\n\n    if (filter.color.length > 0) {\n      temp = temp.filter(e => {\n        const check = e.colors.find(color => filter.color.includes(color));\n        return check !== undefined;\n      });\n    }\n\n    if (filter.size.length > 0) {\n      temp = temp.filter(e => {\n        const check = e.size.find(size => filter.size.includes(size));\n        return check !== undefined;\n      });\n    }\n\n    setProducts(temp);\n  }, [filter, productList]);\n  useEffect(() => {\n    updateProducts();\n  }, [updateProducts]);\n  const filterRef = useRef(null);\n\n  const showHideFilter = () => filterRef.current.classList.toggle('active');\n\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    title: \"Product\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter\",\n          ref: filterRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__close\",\n            onClick: () => showHideFilter(),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bx-left-arrow-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__title\",\n              children: \"product portfolio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content\",\n              children: category.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"catalog__filter__widget__content__item\",\n                children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                  label: item.display,\n                  onChange: input => filterSelect(\"CATEGORY\", input.checked, item),\n                  checked: filter.category.includes(item.categorySlug)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__title\",\n              children: \"Colour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content\",\n              children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"catalog__filter__widget__content__item\",\n                children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                  label: item.display,\n                  onChange: input => filterSelect(\"COLOR\", input.checked, item),\n                  checked: filter.color.includes(item.color)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__title\",\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content\",\n              children: size.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"catalog__filter__widget__content__item\",\n                children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                  label: item.display,\n                  onChange: input => filterSelect(\"SIZE\", input.checked, item),\n                  checked: filter.size.includes(item.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                onClick: clearFilter,\n                children: \"Remove filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__toggle\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            onClick: () => showHideFilter(),\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__content\",\n          children: /*#__PURE__*/_jsxDEV(InfinityList, {\n            data: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"d6oze0CPPWJbcPfWNc62Cg/TAIE=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/pages/Catalog.jsx"],"names":["React","useCallback","useState","useEffect","useRef","Helmet","CheckBox","productData","category","colors","size","Button","InfinityList","Catalog","initFilter","color","productList","getAllProducts","products","setProducts","filter","setFilter","filterSelect","type","checked","item","categorySlug","newCategory","e","newColor","newSize","clearFilter","updateProducts","temp","length","includes","check","find","undefined","filterRef","showHideFilter","current","classList","toggle","map","index","display","input"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react'\n\nimport { Helmet } from '../ui'\nimport { CheckBox } from '../ui'\n\nimport productData from '../assets/fake-data/products'\nimport category from '../assets/fake-data/category'\nimport colors from '../assets/fake-data/product-color'\nimport size from '../assets/fake-data/product-size'\nimport { Button } from '../ui'\nimport InfinityList from '../components/InfinityList'\n\nconst Catalog = () => {\n\n    const initFilter = {\n        category: [],\n        color: [],\n        size: []\n    }\n\n    const productList = productData.getAllProducts()\n\n    const [products, setProducts] = useState(productList)\n\n    const [filter, setFilter] = useState(initFilter)\n\n    const filterSelect = (type, checked, item) => {\n        if (checked) {\n            switch(type) {\n                case \"CATEGORY\":\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\n                    break\n                case \"COLOR\":\n                    setFilter({...filter, color: [...filter.color, item.color]})\n                    break\n                case \"SIZE\":\n                    setFilter({...filter, size: [...filter.size, item.size]})\n                    break\n                default:\n            }\n        } else {\n            switch(type) {\n                case \"CATEGORY\":\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\n                    setFilter({...filter, category: newCategory})\n                    break\n                case \"COLOR\":\n                    const newColor = filter.color.filter(e => e !== item.color)\n                    setFilter({...filter, color: newColor})\n                    break\n                case \"SIZE\":\n                    const newSize = filter.size.filter(e => e !== item.size)\n                    setFilter({...filter, size: newSize})\n                    break\n                default:\n            }\n        }\n    }\n\n    const clearFilter = () => setFilter(initFilter)\n\n    const updateProducts = useCallback(\n        () => {\n            let temp = productList\n\n            if (filter.category.length > 0) {\n                temp = temp.filter(e => filter.category.includes(e.categorySlug))\n            }\n\n            if (filter.color.length > 0) {\n                temp = temp.filter(e => {\n                    const check = e.colors.find(color => filter.color.includes(color))\n                    return check !== undefined\n                })\n            }\n\n            if (filter.size.length > 0) {\n                temp = temp.filter(e => {\n                    const check = e.size.find(size => filter.size.includes(size))\n                    return check !== undefined\n                })\n            }\n\n            setProducts(temp)\n        },\n        [filter, productList],\n    )\n\n    useEffect(() => {\n        updateProducts()\n    }, [updateProducts])\n\n    const filterRef = useRef(null)\n\n    const showHideFilter = () => filterRef.current.classList.toggle('active')\n\n    return (\n        <Helmet title=\"Product\">\n            <Container>\n            <div className=\"catalog\">\n                <div className=\"catalog__filter\" ref={filterRef}>\n                    <div className=\"catalog__filter__close\" onClick={() => showHideFilter()}>\n                        <i className=\"bx bx-left-arrow-alt\"></i>\n                    </div>\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                            product portfolio\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                category.map((item, index) => (\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\n                                            checked={filter.category.includes(item.categorySlug)}\n                                        />\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                            Colour\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                colors.map((item, index) => (\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\n                                            checked={filter.color.includes(item.color)}\n                                        />\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                            Size\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                size.map((item, index) => (\n                                    <div key={index} className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"SIZE\", input.checked, item)}\n                                            checked={filter.size.includes(item.size)}\n                                        />\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__content\">\n                            <Button size=\"sm\" onClick={clearFilter}>Remove filter</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"catalog__filter__toggle\">\n                    <Button size=\"sm\" onClick={() => showHideFilter()}>Filter</Button>\n                </div>\n                <div className=\"catalog__content\">\n                    <InfinityList\n                        data={products}\n                    />\n                </div>\n            </div>\n            </Container>\n        </Helmet>\n    )\n}\n\nexport default Catalog\n"]},"metadata":{},"sourceType":"module"}