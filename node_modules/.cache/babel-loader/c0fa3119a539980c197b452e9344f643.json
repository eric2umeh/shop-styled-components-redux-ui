{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/pages/Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from '../ui';\nimport CartItem from '../components/CartItem';\nimport { Button } from '../ui';\nimport productData from '../assets/fake-data/products';\nimport numberWithCommas from '../utils/numberWithCommas';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const cartItems = useSelector(state => state.cartItems.value);\n  const [cartProducts, setCartProducts] = useState(productData.getCartItemsInfo(cartItems));\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    setCartProducts(productData.getCartItemsInfo(cartItems));\n    setTotalPrice(cartItems.reduce((total, item) => total + Number(item.quantity) * Number(item.price), 0));\n    setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0));\n  }, [cartItems]);\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    title: \"Cart\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart__info__txt\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You have \", totalProducts, \" products in the cart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart__info__txt__price\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: numberWithCommas(Number(totalPrice))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart__info__btn\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"block\",\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/catalog\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"block\",\n                children: \"Continue shopping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart__list\",\n          children: cartProducts.map((item, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n            item: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"iY11sSEfW8k9g3tKSvJf5rys+6w=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cart;\nexport default Cart;\nconst Container = styled.div`\n    .cart {\n        display: flex;\n        align-items: flex-start;\n        justify-content: flex-start;\n\n        @media only screen and (max-width: 600px) {\n            flex-wrap: wrap;\n        }\n\n        .cart__list {\n            width: 60%;\n\n            @media only screen and (max-width: 600px) {\n                width: 100%;\n            }\n        } \n\n        .cart__info {\n            padding: 20px;\n            margin-right: 30px;\n            margin-top: 30px;\n            box-shadow: $box-shadow;\n            position: sticky;\n            top: calc(70px + 20px);\n\n            @media only screen and (max-width: 600px) {\n                width: 100%;\n                margin-right: 0;\n                margin-bottom: 30px;\n                position: unset;\n            }\n\n            .cart__info__txt {\n                & > * {\n                    margin-bottom: 10px;\n                }\n\n                p {\n                    font-size: 1.25rem;\n                }\n\n                &__price {\n                    display: flex;\n                justify-content: space-between;\n                align-items: center;\n                    padding: 10px 0;\n                    font-size: 1.25rem;\n\n                    span:nth-child(2) {\n                        font-size: 2rem;\n                        color: $main-color;\n                        font-weight: 600;\n                    }\n                }\n            }\n\n            &__btn {\n                & > * {\n                    margin-bottom: 20px;\n                }\n            }\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cart\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/pages/Cart.jsx"],"names":["React","useEffect","useState","useSelector","Link","Helmet","CartItem","Button","productData","numberWithCommas","styled","Cart","cartItems","state","value","cartProducts","setCartProducts","getCartItemsInfo","totalProducts","setTotalProducts","totalPrice","setTotalPrice","reduce","total","item","Number","quantity","price","map","index","Container","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Helmet } from '../ui'\nimport CartItem from '../components/CartItem'\nimport { Button } from '../ui'\n\nimport productData from '../assets/fake-data/products'\nimport numberWithCommas from '../utils/numberWithCommas'\nimport styled from 'styled-components'\n\nconst Cart = () => {\n\n    const cartItems = useSelector((state) => state.cartItems.value)\n\n    const [cartProducts, setCartProducts] = useState(productData.getCartItemsInfo(cartItems))\n\n    const [totalProducts, setTotalProducts] = useState(0)\n\n    const [totalPrice, setTotalPrice] = useState(0)\n\n    useEffect(() => {\n        setCartProducts(productData.getCartItemsInfo(cartItems))\n        setTotalPrice(cartItems.reduce((total, item) => total + (Number(item.quantity) * Number(item.price)), 0))\n        setTotalProducts(cartItems.reduce((total, item) => total + Number(item.quantity), 0))\n    }, [cartItems])\n \n    return (\n        <Helmet title=\"Cart\">\n            <Container>\n                <div className=\"cart\">\n                    <div className=\"cart__info\">\n                        <div className=\"cart__info__txt\">\n                            <p>\n                                You have {totalProducts} products in the cart\n                            </p>\n                            <div className=\"cart__info__txt__price\">\n                                <span>Price:</span> <span>{numberWithCommas(Number(totalPrice))}</span>\n                            </div>\n                        </div>\n                        <div className=\"cart__info__btn\">\n                            <Button size=\"block\">\n                                Order\n                            </Button>\n                            <Link to=\"/catalog\">\n                                <Button size=\"block\">\n                                    Continue shopping\n                                </Button>\n                            </Link>\n                            \n                        </div>\n                    </div>\n                    <div className=\"cart__list\">\n                        {\n                            cartProducts.map((item, index) => (\n                                <CartItem item={item} key={index}/>\n                            ))\n                        }\n                    </div>\n                </div>\n            </Container>\n        </Helmet>\n    )\n}\n\nexport default Cart\n\n\nconst Container = styled.div`\n    .cart {\n        display: flex;\n        align-items: flex-start;\n        justify-content: flex-start;\n\n        @media only screen and (max-width: 600px) {\n            flex-wrap: wrap;\n        }\n\n        .cart__list {\n            width: 60%;\n\n            @media only screen and (max-width: 600px) {\n                width: 100%;\n            }\n        } \n\n        .cart__info {\n            padding: 20px;\n            margin-right: 30px;\n            margin-top: 30px;\n            box-shadow: $box-shadow;\n            position: sticky;\n            top: calc(70px + 20px);\n\n            @media only screen and (max-width: 600px) {\n                width: 100%;\n                margin-right: 0;\n                margin-bottom: 30px;\n                position: unset;\n            }\n\n            .cart__info__txt {\n                & > * {\n                    margin-bottom: 10px;\n                }\n\n                p {\n                    font-size: 1.25rem;\n                }\n\n                &__price {\n                    display: flex;\n                justify-content: space-between;\n                align-items: center;\n                    padding: 10px 0;\n                    font-size: 1.25rem;\n\n                    span:nth-child(2) {\n                        font-size: 2rem;\n                        color: $main-color;\n                        font-weight: 600;\n                    }\n                }\n            }\n\n            &__btn {\n                & > * {\n                    margin-bottom: 20px;\n                }\n            }\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}