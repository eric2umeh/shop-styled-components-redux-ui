{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  value: items\n};\nexport const cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const duplicate = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size);\n\n      if (duplicate.length > 0) {\n        state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size);\n        state.value = [...state.value, {\n          id: duplicate[0].id,\n          slug: newItem.slug,\n          color: newItem.color,\n          size: newItem.size,\n          price: newItem.price,\n          quantity: newItem.quantity + duplicate[0].quantity\n        }];\n      } else {\n        state.value = [...state.value, { ...action.payload,\n          id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\n        }];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    },\n    updateItem: (state, action) => {\n      const newItem = action.payload;\n      const item = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size);\n\n      if (item.length > 0) {\n        state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size);\n        state.value = [...state.value, {\n          id: item[0].id,\n          slug: newItem.slug,\n          color: newItem.color,\n          size: newItem.size,\n          price: newItem.price,\n          quantity: newItem.quantity\n        }];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    },\n    removeItem: (state, action) => {\n      const item = action.payload;\n      state.value = state.value.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size);\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addItem,\n  removeItem,\n  updateItem\n} = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"sources":["/Users/eric/Desktop/Eric/React/Exercises/E-commerce/tran-anh-shop-sass-redux/eric-styled-components/src/redux/shopping-cart/cartItemsSlide.js"],"names":["createSlice","items","localStorage","getItem","JSON","parse","initialState","value","cartItemsSlice","name","reducers","addItem","state","action","newItem","payload","duplicate","filter","e","slug","color","size","length","id","price","quantity","setItem","stringify","sort","a","b","updateItem","item","removeItem","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    value: items,\n}\n\nexport const cartItemsSlice = createSlice({\n    name: 'cartItems',\n    initialState,\n    reducers: {\n        addItem: (state, action) => {\n            const newItem = action.payload\n            const duplicate = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size)\n            if (duplicate.length > 0) {\n                state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size)\n                state.value = [...state.value, {\n                    id: duplicate[0].id,\n                    slug: newItem.slug,\n                    color: newItem.color,\n                    size: newItem.size,\n                    price: newItem.price,\n                    quantity: newItem.quantity + duplicate[0].quantity\n                }]\n            } else {\n                state.value = [...state.value, {\n                    ...action.payload,\n                    id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\n                }]\n            }\n            localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0))))\n        },\n        updateItem: (state, action) => {\n            const newItem = action.payload\n            const item = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size)\n            if (item.length > 0) {\n                state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size)\n                state.value = [...state.value, {\n                    id: item[0].id,\n                    slug: newItem.slug,\n                    color: newItem.color,\n                    size: newItem.size,\n                    price: newItem.price,\n                    quantity: newItem.quantity\n                }]\n            }\n            localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0))))\n        },\n        removeItem: (state, action) => {\n            const item = action.payload\n            state.value = state.value.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size)\n            localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0))))\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addItem, removeItem, updateItem } = cartItemsSlice.actions\n\nexport default cartItemsSlice.reducer"]},"metadata":{},"sourceType":"module"}