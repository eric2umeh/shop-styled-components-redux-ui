{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/ui/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  const color = {\n    blue: \"#4267b2\",\n    orange: \"#fbb96b\",\n    pink: \"#fe7e73\",\n    white: \"#fff\",\n    black: \"#000\",\n    main: \"#4267b2\",\n    red: \"#ff0000\"\n  };\n  const bg = props.backgroundColor ? 'bg-' + props.backgroundColor : 'bg-main';\n  const size = props.size ? 'btn-' + props.size : '';\n  const animate = props.animate ? 'btn-animate' : '';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${bg} ${size} ${animate}`,\n    onClick: props.onClick ? () => props.onClick() : null,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"btn__txt\",\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), props.icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"btn__icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${props.icon} bx-tada`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nButton.propTypes = {\n  backgroundColor: PropTypes.string,\n  size: PropTypes.string,\n  icon: PropTypes.string,\n  animate: PropTypes.bool,\n  onclick: PropTypes.func\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/eric/Desktop/Eric/React/Exercises/Website/shop-mern-redux/client/src/ui/Button.jsx"],"names":["React","PropTypes","Button","props","color","blue","orange","pink","white","black","main","red","bg","backgroundColor","size","animate","onClick","children","icon","propTypes","string","bool","onclick","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE,SADI;AAEVC,IAAAA,MAAM,EAAE,SAFE;AAGVC,IAAAA,IAAI,EAAE,SAHI;AAIVC,IAAAA,KAAK,EAAE,MAJG;AAKVC,IAAAA,KAAK,EAAE,MALG;AAMVC,IAAAA,IAAI,EAAE,SANI;AAOVC,IAAAA,GAAG,EAAE;AAPK,GAAd;AAUA,QAAMC,EAAE,GAAGT,KAAK,CAACU,eAAN,GAAwB,QAAQV,KAAK,CAACU,eAAtC,GAAwD,SAAnE;AAEA,QAAMC,IAAI,GAAGX,KAAK,CAACW,IAAN,GAAa,SAASX,KAAK,CAACW,IAA5B,GAAmC,EAAhD;AAEA,QAAMC,OAAO,GAAGZ,KAAK,CAACY,OAAN,GAAgB,aAAhB,GAAgC,EAAhD;AAEA,sBACI;AACI,IAAA,SAAS,EAAG,OAAMH,EAAG,IAAGE,IAAK,IAAGC,OAAQ,EAD5C;AAEI,IAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,GAAgB,MAAMb,KAAK,CAACa,OAAN,EAAtB,GAAwC,IAFrD;AAAA,4BAII;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,gBAA4Bb,KAAK,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMQd,KAAK,CAACe,IAAN,gBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACI;AAAG,QAAA,SAAS,EAAG,GAAEf,KAAK,CAACe,IAAK;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,GAII,IAVZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjCD;;KAAMhB,M;AAmCNA,MAAM,CAACiB,SAAP,GAAmB;AACfN,EAAAA,eAAe,EAAEZ,SAAS,CAACmB,MADZ;AAEfN,EAAAA,IAAI,EAAEb,SAAS,CAACmB,MAFD;AAGfF,EAAAA,IAAI,EAAEjB,SAAS,CAACmB,MAHD;AAIfL,EAAAA,OAAO,EAAEd,SAAS,CAACoB,IAJJ;AAKfC,EAAAA,OAAO,EAAErB,SAAS,CAACsB;AALJ,CAAnB;AAQA,eAAerB,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = props => {\n\n    const color = {\n        blue: \"#4267b2\",\n        orange: \"#fbb96b\",\n        pink: \"#fe7e73\",\n        white: \"#fff\",\n        black: \"#000\",\n        main: \"#4267b2\",\n        red: \"#ff0000\",\n    };\n    \n    const bg = props.backgroundColor ? 'bg-' + props.backgroundColor : 'bg-main'\n\n    const size = props.size ? 'btn-' + props.size : ''\n\n    const animate = props.animate ? 'btn-animate' : ''\n\n    return (\n        <button\n            className={`btn ${bg} ${size} ${animate}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            <span className=\"btn__txt\">{props.children}</span>\n            {\n                props.icon ? (\n                    <span className=\"btn__icon\">\n                        <i className={`${props.icon} bx-tada`}></i>\n                    </span>\n                ) : null\n            }\n        </button>\n    )\n}\n\nButton.propTypes = {\n    backgroundColor: PropTypes.string,\n    size: PropTypes.string,\n    icon: PropTypes.string,\n    animate: PropTypes.bool,\n    onclick: PropTypes.func\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}